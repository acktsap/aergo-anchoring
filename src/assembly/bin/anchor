#!/bin/bash -e

SOURCE="${BASH_SOURCE[0]}"
# resolve $SOURCE until the file is no longer a symlink
while [ -h "$SOURCE" ]; do
  SCRIPT_HOME="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  [[ $SOURCE != /* ]] && SOURCE="$SCRIPT_HOME/$SOURCE"
done
SCRIPT_HOME="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"

# Set project home
ANCHOR_HOME="$(cd "${SCRIPT_HOME}/.." && pwd)"

# Directory definitions
export ANCHOR_BIN=${ANCHOR_BIN:-$ANCHOR_HOME/bin}
export ANCHOR_CONF=${ANCHOR_CONF:-$ANCHOR_HOME/conf}
export ANCHOR_DOC=${ANCHOR_DOC:-$ANCHOR_HOME/doc}
export ANCHOR_LIB=${ANCHOR_LIB:-$ANCHOR_HOME/lib}

JARS=$(find "$ANCHOR_LIB" -name '*.jar' | tr '\n' ':')
#--add-exports java.base/java.lang=ALL-UNNAMED
#--add-exports java.base/jdk.internal.misc=ALL-UNNAMED
COMMAND="java -cp $ANCHOR_CONF:$JARS \
	-Dlogback.verbose=true \
	-Dlogging.config=$ANCHOR_CONF/anchor-logger.xml \
	-Dconfig.file=$ANCHOR_CONF/config.properties \
	-Dlogback.configurationFile=$ANCHOR_CONF/anchor-logger.xml io.aergo.sample.AppLauncher $@"
$COMMAND
